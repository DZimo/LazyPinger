// <auto-generated />
using LazyPinger.Base.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LazyPinger.Base.Migrations
{
    [DbContext(typeof(LazyPingerDbContext))]
    [Migration("20250825171437_DevicePingUpdated")]
    partial class DevicePingUpdated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("LazyPinger.Base.Models.Devices.DevicePing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnswerTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("DevicesGroupID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IP")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("MacAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Port")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubnetRangeMax")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubnetRangeMin")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("DevicesGroupID");

                    b.ToTable("DevicePings");
                });

            modelBuilder.Entity("LazyPinger.Base.Models.Devices.DevicesGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("DevicesGroups");
                });

            modelBuilder.Entity("LazyPinger.Base.Models.UserSelection", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutoRestart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutoRestartTime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutoRun")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FastPing")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FastnessLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("UserSelections");
                });

            modelBuilder.Entity("LazyPinger.Base.Models.Devices.DevicePing", b =>
                {
                    b.HasOne("LazyPinger.Base.Models.Devices.DevicesGroup", "DevicesGroup")
                        .WithMany("DevicePings")
                        .HasForeignKey("DevicesGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DevicesGroup");
                });

            modelBuilder.Entity("LazyPinger.Base.Models.Devices.DevicesGroup", b =>
                {
                    b.Navigation("DevicePings");
                });
#pragma warning restore 612, 618
        }
    }
}
